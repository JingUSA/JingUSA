{"title":"Assignment 4","markdown":{"yaml":{"title":"Assignment 4","author":"Jing Tao","date":"Oct.15","format":"html"},"headingText":"Charts #1–#4  |  Alternative robust version (no tidytext)","containsRefs":false,"markdown":"\n\n```{r}\n#install.packages(\"quarto\")\n\n\nsuppressPackageStartupMessages({\n  library(readr); library(dplyr); library(tidyr)\n  library(ggplot2); library(scales); library(lubridate)\n  library(stringr); library(forcats)\n})\noptions(scipen = 999)\n\n# ---------- 0) Load & clean ----------\ncsv_path <- \"/Users/jingtao/Desktop/FALL 2025/DATA VISUALIZATION/Jing Tao/owid-covid-data.csv\"   \nowid <- read_csv(csv_path, show_col_types = FALSE)\n \nneed <- c(\"continent\",\"location\",\"date\",\"population\",\"total_cases\",\"gdp_per_capita\")\nstopifnot(all(need %in% names(owid)))\n\nlatest <- owid %>%\n  select(all_of(need)) %>%\n  filter(!is.na(continent), !is.na(population), population > 0) %>%\n  mutate(date_clean = ymd(str_sub(as.character(date), 1, 10), quiet = TRUE)) %>%\n  filter(!is.na(date_clean)) %>%\n  group_by(location) %>%\n  slice_max(order_by = date_clean, n = 1, with_ties = FALSE) %>%\n  ungroup()\n\ndf <- latest %>%\n  transmute(\n    Continent  = continent,\n    Country    = location,\n    Population = as.numeric(population) / 1e6,   # 百万人\n    Cases      = as.numeric(total_cases),\n    GDP        = as.numeric(gdp_per_capita)\n  )\n\nif (!dir.exists(\"outputs\")) dir.create(\"outputs\", recursive = TRUE)\nstamp <- format(Sys.time(), \"%Y%m%d_%H%M%S\")\nsave_png <- function(p, name, w=12, h=7, dpi=300){\n  fn <- file.path(\"outputs\", paste0(name, \"_\", stamp, \".png\"))\n  ggsave(fn, p, width=w, height=h, dpi=dpi); message(\"Saved: \", fn)\n}\n\n# Chart 1 — Variable Width Column\nwrap_cont <- function(x) gsub(\" \", \"\\n\", x)\n\nmekko <- df %>%\n  group_by(Continent) %>%\n  summarise(\n    pop_sum = sum(Population, na.rm = TRUE),\n    cases_median = median(Cases, na.rm = TRUE),\n    .groups = \"drop\"\n  ) %>%\n  arrange(Continent) %>%\n  mutate(\n    width_share = pop_sum / sum(pop_sum),\n    xmin = lag(cumsum(width_share), default = 0),\n    xmax = cumsum(width_share),\n    xmid = (xmin + xmax) / 2,\n    Cont_lbl = wrap_cont(Continent)\n  )\n\np1 <- ggplot(mekko) +\n  geom_rect(aes(xmin=xmin, xmax=xmax, ymin=0, ymax=cases_median, fill=Continent),\n            color=\"white\") +\n  scale_x_continuous(breaks=mekko$xmid, labels=mekko$Cont_lbl, expand=c(0.02,0)) +\n  scale_y_continuous(labels=label_comma()) +\n  labs(\n    title=\"Chart 1 — Variable Width Column Chart\",\n    subtitle=\"Width = population share (millions); Height = median total cases (latest per country)\",\n    x=\"Continent (bar width ∝ population share)\", y=\"Median Total Cases\"\n  ) +\n  theme_minimal(base_size=13) +\n  theme(legend.position=\"none\", plot.title=element_text(face=\"bold\"))\nprint(p1)\nsave_png(p1, \"A4_chart1_mekko\")\n\n```\n\n```{r}\n\n# Chart 2 — Table with Embedded Charts\n\ntop6_tbl <- df %>%\n  slice_max(order_by = Cases, n = 6, with_ties = FALSE) %>%\n  select(Country, Population, GDP)\n\nlong2 <- top6_tbl %>%\n  pivot_longer(c(Population, GDP), names_to = \"Metric\", values_to = \"Value\") %>%\n  group_by(Metric) %>%\n  mutate(Value_scaled = Value / max(Value, na.rm = TRUE)) %>%\n  ungroup()\n\np2 <- ggplot(long2, aes(x = 1, y = Value_scaled)) +\n  geom_col(width = 0.6, fill = \"#6baed6\") +\n  facet_grid(rows = vars(Country), cols = vars(Metric), switch = \"y\") +\n  coord_cartesian(ylim = c(0,1)) +\n  labs(\n    title=\"Chart 2 — Table with Embedded Charts (ggplot-only)\",\n    subtitle=\"Rows = Top-6 by Cases; Columns = Population (M) & GDP per capita (scaled within column)\",\n    x=NULL, y=NULL\n  ) +\n  theme_minimal(base_size=13) +\n  theme(\n    axis.text=element_blank(), axis.ticks=element_blank(), panel.grid=element_blank(),\n    strip.placement=\"outside\",\n    strip.background=element_rect(fill=\"grey95\", color=NA),\n    panel.border=element_rect(color=\"grey70\", fill=NA, linewidth=0.5),\n    plot.title=element_text(face=\"bold\"),\n    plot.margin=margin(10,10,10,16)\n  )\nprint(p2)\nsave_png(p2, \"A4_chart2_table_embedded\")\n```\n\n```{r}\n# Chart 3 — Horizontal Bar (Many items, Few categories)\n\ndf3 <- df %>%\n  group_by(Continent) %>%\n  slice_max(order_by = Cases, n = 8, with_ties = FALSE) %>%\n  ungroup() %>%\n  mutate(\n    y_comb = paste(Continent, Country, sep = \" | \")\n  ) %>%\n  group_by(Continent) %>%\n  arrange(Cases, .by_group = TRUE) %>%\n  mutate(\n    # 在各洲内部设置因子顺序（从小到大，条形从下到上）\n    y_comb = factor(y_comb, levels = unique(y_comb))\n  ) %>%\n  ungroup()\n\n# 只显示国家名的 labeller\nonly_country <- function(x) sub(\"^.*\\\\|\\\\s*\", \"\", x)\n\np3 <- ggplot(df3, aes(x = Cases, y = y_comb)) +\n  geom_col(fill = \"#74c476\") +\n  facet_wrap(~ Continent, nrow = 1, scales = \"free_y\") +\n  scale_y_discrete(labels = only_country) +\n  scale_x_continuous(labels = label_comma()) +\n  labs(\n    title = \"Chart 3 — Horizontal Bar Chart (Many Items, Few Categories)\",\n    subtitle = \"Top 8 countries by total cases within each continent (latest per country)\",\n    x = \"Total Cases\", y = \"Country\"\n  ) +\n  theme_minimal(base_size = 13) +\n  theme(plot.title = element_text(face = \"bold\"))\nprint(p3)\nsave_png(p3, \"A4_chart3_bar_faceted\")\n```\n\n```{r}\n# --------------------------------------------------------------\n# Chart 4 — Column Chart (Few items)\n# --------------------------------------------------------------\nagg4 <- df %>%\n  group_by(Continent) %>%\n  summarise(median_gdp_pc = median(GDP, na.rm = TRUE), .groups = \"drop\")\n\np4 <- ggplot(agg4, aes(x = Continent, y = median_gdp_pc, fill = Continent)) +\n  geom_col() +\n  scale_y_continuous(labels = label_comma()) +\n  labs(\n    title=\"Chart 4 — Column Chart\",\n    subtitle=\"Median GDP per capita by continent\",\n    x=\"Continent\", y=\"Median GDP per capita (USD)\"\n  ) +\n  theme_minimal(base_size=13) +\n  theme(legend.position=\"none\", plot.title=element_text(face=\"bold\"))\nprint(p4)\nsave_png(p4, \"A4_chart4_column\")\n\ndir.create(\"images\", showWarnings = FALSE)\nsave_png <- function(p, name, width = 1600, height = 1000, dpi = 150) {\n  ggplot2::ggsave(filename = file.path(\"images\", paste0(name, \".png\")),\n                  plot = p, width = width/96, height = height/96, dpi = dpi)\n}\n\n```\n","srcMarkdownNoYaml":"\n\n```{r}\n#install.packages(\"quarto\")\n\n# Charts #1–#4  |  Alternative robust version (no tidytext)\n\nsuppressPackageStartupMessages({\n  library(readr); library(dplyr); library(tidyr)\n  library(ggplot2); library(scales); library(lubridate)\n  library(stringr); library(forcats)\n})\noptions(scipen = 999)\n\n# ---------- 0) Load & clean ----------\ncsv_path <- \"/Users/jingtao/Desktop/FALL 2025/DATA VISUALIZATION/Jing Tao/owid-covid-data.csv\"   \nowid <- read_csv(csv_path, show_col_types = FALSE)\n \nneed <- c(\"continent\",\"location\",\"date\",\"population\",\"total_cases\",\"gdp_per_capita\")\nstopifnot(all(need %in% names(owid)))\n\nlatest <- owid %>%\n  select(all_of(need)) %>%\n  filter(!is.na(continent), !is.na(population), population > 0) %>%\n  mutate(date_clean = ymd(str_sub(as.character(date), 1, 10), quiet = TRUE)) %>%\n  filter(!is.na(date_clean)) %>%\n  group_by(location) %>%\n  slice_max(order_by = date_clean, n = 1, with_ties = FALSE) %>%\n  ungroup()\n\ndf <- latest %>%\n  transmute(\n    Continent  = continent,\n    Country    = location,\n    Population = as.numeric(population) / 1e6,   # 百万人\n    Cases      = as.numeric(total_cases),\n    GDP        = as.numeric(gdp_per_capita)\n  )\n\nif (!dir.exists(\"outputs\")) dir.create(\"outputs\", recursive = TRUE)\nstamp <- format(Sys.time(), \"%Y%m%d_%H%M%S\")\nsave_png <- function(p, name, w=12, h=7, dpi=300){\n  fn <- file.path(\"outputs\", paste0(name, \"_\", stamp, \".png\"))\n  ggsave(fn, p, width=w, height=h, dpi=dpi); message(\"Saved: \", fn)\n}\n\n# Chart 1 — Variable Width Column\nwrap_cont <- function(x) gsub(\" \", \"\\n\", x)\n\nmekko <- df %>%\n  group_by(Continent) %>%\n  summarise(\n    pop_sum = sum(Population, na.rm = TRUE),\n    cases_median = median(Cases, na.rm = TRUE),\n    .groups = \"drop\"\n  ) %>%\n  arrange(Continent) %>%\n  mutate(\n    width_share = pop_sum / sum(pop_sum),\n    xmin = lag(cumsum(width_share), default = 0),\n    xmax = cumsum(width_share),\n    xmid = (xmin + xmax) / 2,\n    Cont_lbl = wrap_cont(Continent)\n  )\n\np1 <- ggplot(mekko) +\n  geom_rect(aes(xmin=xmin, xmax=xmax, ymin=0, ymax=cases_median, fill=Continent),\n            color=\"white\") +\n  scale_x_continuous(breaks=mekko$xmid, labels=mekko$Cont_lbl, expand=c(0.02,0)) +\n  scale_y_continuous(labels=label_comma()) +\n  labs(\n    title=\"Chart 1 — Variable Width Column Chart\",\n    subtitle=\"Width = population share (millions); Height = median total cases (latest per country)\",\n    x=\"Continent (bar width ∝ population share)\", y=\"Median Total Cases\"\n  ) +\n  theme_minimal(base_size=13) +\n  theme(legend.position=\"none\", plot.title=element_text(face=\"bold\"))\nprint(p1)\nsave_png(p1, \"A4_chart1_mekko\")\n\n```\n\n```{r}\n\n# Chart 2 — Table with Embedded Charts\n\ntop6_tbl <- df %>%\n  slice_max(order_by = Cases, n = 6, with_ties = FALSE) %>%\n  select(Country, Population, GDP)\n\nlong2 <- top6_tbl %>%\n  pivot_longer(c(Population, GDP), names_to = \"Metric\", values_to = \"Value\") %>%\n  group_by(Metric) %>%\n  mutate(Value_scaled = Value / max(Value, na.rm = TRUE)) %>%\n  ungroup()\n\np2 <- ggplot(long2, aes(x = 1, y = Value_scaled)) +\n  geom_col(width = 0.6, fill = \"#6baed6\") +\n  facet_grid(rows = vars(Country), cols = vars(Metric), switch = \"y\") +\n  coord_cartesian(ylim = c(0,1)) +\n  labs(\n    title=\"Chart 2 — Table with Embedded Charts (ggplot-only)\",\n    subtitle=\"Rows = Top-6 by Cases; Columns = Population (M) & GDP per capita (scaled within column)\",\n    x=NULL, y=NULL\n  ) +\n  theme_minimal(base_size=13) +\n  theme(\n    axis.text=element_blank(), axis.ticks=element_blank(), panel.grid=element_blank(),\n    strip.placement=\"outside\",\n    strip.background=element_rect(fill=\"grey95\", color=NA),\n    panel.border=element_rect(color=\"grey70\", fill=NA, linewidth=0.5),\n    plot.title=element_text(face=\"bold\"),\n    plot.margin=margin(10,10,10,16)\n  )\nprint(p2)\nsave_png(p2, \"A4_chart2_table_embedded\")\n```\n\n```{r}\n# Chart 3 — Horizontal Bar (Many items, Few categories)\n\ndf3 <- df %>%\n  group_by(Continent) %>%\n  slice_max(order_by = Cases, n = 8, with_ties = FALSE) %>%\n  ungroup() %>%\n  mutate(\n    y_comb = paste(Continent, Country, sep = \" | \")\n  ) %>%\n  group_by(Continent) %>%\n  arrange(Cases, .by_group = TRUE) %>%\n  mutate(\n    # 在各洲内部设置因子顺序（从小到大，条形从下到上）\n    y_comb = factor(y_comb, levels = unique(y_comb))\n  ) %>%\n  ungroup()\n\n# 只显示国家名的 labeller\nonly_country <- function(x) sub(\"^.*\\\\|\\\\s*\", \"\", x)\n\np3 <- ggplot(df3, aes(x = Cases, y = y_comb)) +\n  geom_col(fill = \"#74c476\") +\n  facet_wrap(~ Continent, nrow = 1, scales = \"free_y\") +\n  scale_y_discrete(labels = only_country) +\n  scale_x_continuous(labels = label_comma()) +\n  labs(\n    title = \"Chart 3 — Horizontal Bar Chart (Many Items, Few Categories)\",\n    subtitle = \"Top 8 countries by total cases within each continent (latest per country)\",\n    x = \"Total Cases\", y = \"Country\"\n  ) +\n  theme_minimal(base_size = 13) +\n  theme(plot.title = element_text(face = \"bold\"))\nprint(p3)\nsave_png(p3, \"A4_chart3_bar_faceted\")\n```\n\n```{r}\n# --------------------------------------------------------------\n# Chart 4 — Column Chart (Few items)\n# --------------------------------------------------------------\nagg4 <- df %>%\n  group_by(Continent) %>%\n  summarise(median_gdp_pc = median(GDP, na.rm = TRUE), .groups = \"drop\")\n\np4 <- ggplot(agg4, aes(x = Continent, y = median_gdp_pc, fill = Continent)) +\n  geom_col() +\n  scale_y_continuous(labels = label_comma()) +\n  labs(\n    title=\"Chart 4 — Column Chart\",\n    subtitle=\"Median GDP per capita by continent\",\n    x=\"Continent\", y=\"Median GDP per capita (USD)\"\n  ) +\n  theme_minimal(base_size=13) +\n  theme(legend.position=\"none\", plot.title=element_text(face=\"bold\"))\nprint(p4)\nsave_png(p4, \"A4_chart4_column\")\n\ndir.create(\"images\", showWarnings = FALSE)\nsave_png <- function(p, name, width = 1600, height = 1000, dpi = 150) {\n  ggplot2::ggsave(filename = file.path(\"images\", paste0(name, \".png\")),\n                  plot = p, width = width/96, height = height/96, dpi = dpi)\n}\n\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"A4.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","theme":"default","title":"Assignment 4","author":"Jing Tao","date":"Oct.15"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}